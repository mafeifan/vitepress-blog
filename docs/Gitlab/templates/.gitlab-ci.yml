image: node:16.20.0

variables:
  IMAGE_NAME: go-view-x
  IMAGE_TAG: latest
  KUBE_NAMESPACE: go-view
  KUBE_DEPLOYMENT: go-view-x-v1
  KUBE_CONTAINER_NAME: go-view-x

cache:
  - key:
      files:
        - pnpm-lock.yaml
    paths:
      - node_modules/
      - .pnpm-store/
      - dist/
    policy: pull

stages: # List of stages for jobs, and their order of execution
  - install
  - test
  - build
  - image
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

Env Setup:
  stage: install
  script:
    - if [ "$CI_COMMIT_TAG" ]; then
      echo "Building for tag $CI_COMMIT_TAG";
      IMAGE_TAG=$CI_COMMIT_TAG;
      else
      echo "Building for branch $CI_COMMIT_REF_NAME";
      IMAGE_TAG=$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID;
      fi
    - echo "IMAGE_TAG=$IMAGE_TAG" >> build.env
  artifacts:
    reports:
      dotenv: build.env

Install:
  stage: install
  script:
    - npm install -g pnpm
    - pnpm config set store-dir .pnpm-store
    - pnpm install
  cache:
    - key:
        files:
          - pnpm-lock.yaml
      paths:
        - node_modules/
        - .pnpm-store/
        - dist/
      policy: pull-push

Lint:
  stage: test
  needs: ['Install']
  script:
    - npm run lint

Build:
  stage: build
  needs: ['Env Setup', 'Install', 'Lint']
  dependencies:
    - Env Setup
  script:
    - sed -i "s/__VERSION__/${IMAGE_TAG}/g" index.html
    - mv docker/vite-env .env
    - NODE_OPTIONS=--max-old-space-size=4096 npm run build
  cache:
    - key:
        files:
          - pnpm-lock.yaml
      paths:
        - node_modules/
        - .pnpm-store/
        - dist/
      policy: pull-push

Build Image:
  stage: image
  needs: ['Env Setup', 'Build']
  image:
    name: anjia0532/kaniko-project.executor:v1.9.2-debug
    entrypoint: ['']
  script:
    - echo "{\"auths\":{\"$HARBOR_URL\":{\"auth\":\"$(echo -n $HARBOR_USERNAME:$HARBOR_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/Dockerfile"
      --destination "${IMAGE_NAME}:${IMAGE_TAG}"
      --snapshot-mode=redo
      --use-new-run

Deploy to QA:
  stage: deploy
  needs: ['Env Setup', 'Build Image']
  environment: qa
  only:
    - develop
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  cache: []
  script:
    - kubectl config get-contexts
    - kubectl config use-context zed/gitlab-ci:shinetechzz
    - kubectl config view
    - kubectl --namespace $KUBE_NAMESPACE describe deployments/$KUBE_DEPLOYMENT
    - kubectl --namespace $KUBE_NAMESPACE set image deployments/$KUBE_DEPLOYMENT $KUBE_CONTAINER_NAME=${IMAGE_NAME}:${IMAGE_TAG}
